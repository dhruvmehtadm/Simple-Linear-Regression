# -*- coding: utf-8 -*-

#simple linear regression

#data preprocessing

#importing libraries
import numpy as np
import matplotlib.pyplot as plt
import pandas as pd

#importing dataset
dataset = pd.read_csv('Task1.csv')
X = dataset.iloc[:, :-1].values
y = dataset.iloc[:, 1].values

#splitting dataset into training set & test set
#from sklearn.cross_validation import train_test_split
from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 1/5, random_state = 0)

#fitting simple linear regression to the training set
from sklearn.linear_model import LinearRegression
regressor = LinearRegression()
regressor.fit(X_train, y_train)

#predicting the test set results
y_pred = regressor.predict(X_test)

#visualising the training set results
plt.scatter(X_train, y_train, color = 'red')
plt.plot(X_train, regressor.predict(X_train), color = 'blue')
plt.title('Marks vs No. of hours studied(training set)')
plt.xlabel('No. of hours studied')
plt.ylabel('Marks')
plt.show()

#visualising the test set results
plt.scatter(X_test, y_test, color = 'red')
plt.plot(X_train, regressor.predict(X_train), color = 'blue')
plt.title('Marks vs No. of hours studied(test set)')
plt.xlabel('No. of hours studied')
plt.ylabel('Marks')
plt.show()

marks = regressor.predict([[9.25]])
print("If a student studies for 9.25 hours then he will get", marks)
